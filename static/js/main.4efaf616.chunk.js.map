{"version":3,"sources":["constants.js","TypeStatus.js","AppForm.js","Todo.js","ToDoList.js","App.js","index.js"],"names":["exports","typeEnum","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","selectFun","selected","classes","FormControl","className","InputLabel","id","Select","labelId","value","style","color","onChange","Object","entries","map","todo","col","MenuItem","TodoForm","addTodo","constants","require","useState","task","completed","type","setTodo","onSubmit","e","preventDefault","trim","uuidv4","TextField","label","name","target","Button","Todo","toggleComplete","removeTodo","typeNUM","ListItem","display","Checkbox","checked","onClick","console","log","Typography","variant","textDecoration","class","IconButton","TodoList","todos","List","key","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","padding","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4efaf616.chunk.js","sourcesContent":["var typeEnum = {\r\n    \"BASIC\" : \"black\",\r\n    \"SCHOOL\" : \"blue\",\r\n    \"GROCERIES\" : \"green\",\r\n    \"OTHERS\" : \"grey\",\r\n    \"NONE\" : \"red\"\r\n};\r\n\r\nexports.typeEnum = typeEnum","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SimpleSelect({ typeEnum, selectFun,  selected }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"todo-type\">Type</InputLabel>\r\n                <Select\r\n                    labelId=\"todo-select-type\"\r\n                    id=\"todo-simple-select\"\r\n                    value={selected}\r\n                    style={ {color: typeEnum[selected]} }\r\n                    onChange={ selectFun }\r\n                >\r\n                    { Object.entries(typeEnum).map(([todo, col]) => (\r\n                        <MenuItem value={todo} style={{color: col }}>{todo}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\nexport default SimpleSelect;","import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport SimpleSelect from \"./TypeStatus\";\r\n\r\nfunction TodoForm({ addTodo }   ) {\r\n\r\n    var constants = require('./constants');\r\n\r\n    const [todo, setTodo] = useState({\r\n        id: \"\",\r\n        task: \"\",\r\n        completed: false,\r\n        type: constants.typeEnum[1]\r\n    });\r\n\r\n    function handleTaskInputChange(e) {\r\n        // e.target.value contains new input from onChange\r\n        // event for input elements\r\n        setTodo({ ...todo, task: e.target.value });\r\n    }\r\n\r\n    function handleTypeStatus(e) {\r\n        setTodo({ ...todo, type: e.target.value });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault(); // prevents browser refresh\r\n        // trim() gets rid of string whitespace\r\n        if (todo.task.trim()) {\r\n            addTodo({ ...todo, id: uuidv4() });\r\n            setTodo({ ...todo, task: \"\" });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Task\"\r\n                type=\"text\"\r\n                name=\"task\"\r\n                value={todo.task}\r\n                onChange={handleTaskInputChange}\r\n            />\r\n            <SimpleSelect\r\n                type=\"type\"\r\n                name=\"status\"\r\n                typeEnum={constants.typeEnum}\r\n                selectFun={handleTypeStatus}\r\n                selected={todo.type}/>\r\n            <Button type=\"submit\">Submit</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React from \"react\";\r\n\r\nimport './Todo.css'\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo, typeNUM }) {\r\n\r\n\r\n    var constants = require('./constants');\r\n\r\n\r\n    function handleCheckboxClick() {\r\n        toggleComplete(todo.id);\r\n        console.log(\"This is a Button\")\r\n    }\r\n\r\n    function handleRemoveClick() {\r\n        removeTodo(todo.id);\r\n        return <h1> Delete button </h1>\r\n    }\r\n\r\n    return (\r\n        <ListItem style={{ display: \"flex\" }}>\r\n            <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\r\n            <Typography\r\n                variant=\"body1\"\r\n                style={{\r\n                    textDecoration: todo.completed ? \"line-through\" : null\r\n                }}\r\n            >\r\n                {todo.task}\r\n            </Typography>\r\n\r\n            <Typography variant=\"overline\" class=\"statusToDo\" style={{color:constants.typeEnum[todo.type]}}> {todo.type} </Typography>\r\n            <IconButton onClick={handleRemoveClick}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default Todo;","import { List } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, removeTodo, toggleComplete }) {\r\n\r\n    var typeEnum = require('constants');\r\n\r\n    return (\r\n        <List>\r\n            {todos.map(todo => (\r\n                <Todo\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    removeTodo={removeTodo}\r\n                    toggleComplete={toggleComplete}\r\n                />\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport TodoForm from \"./AppForm\";\r\nimport TodoList from \"./ToDoList\";\r\n\r\nconst LOCAL_STORAGE_KEY = \"todo-list-todos\";\r\n\r\n\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // fires when app component mounts to the DOM\r\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if (storageTodos) {\r\n            setTodos(storageTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // fires when todos array gets updated\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    function addTodo(todo) {\r\n        setTodos([todo, ...todos]);\r\n    }\r\n\r\n    function toggleComplete(id) {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setTodos(todos.filter(todo => todo.id !== id));\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Typography style={{ padding: 16 }} variant=\"h1\">\r\n                React Todo\r\n            </Typography>\r\n            <TodoForm addTodo={addTodo} />\r\n            <TodoList todos={todos}\r\n                      removeTodo={removeTodo}\r\n                      toggleComplete={toggleComplete} />\r\n            <h2> This should be the footing </h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));;"],"sourceRoot":""}